# Generated by Django 5.1.6 on 2025-08-05 08:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('product', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Unique name of the city.', max_length=50, unique=True, verbose_name='City Name')),
                ('car_code', models.IntegerField(default=11, help_text='Unique car code for the city.', verbose_name='Car Code')),
                ('slug', models.SlugField(editable=False, help_text='URL-friendly identifier for the city.', unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['slug'], name='core_city_slug_72b672_idx'), models.Index(fields=['name'], name='core_city_name_079295_idx')],
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='URL-friendly identifier for the driver.', max_length=100, unique=True, verbose_name='Slug')),
                ('contact', models.OneToOneField(help_text='The contact associated with this driver.', on_delete=django.db.models.deletion.CASCADE, related_name='driver', to='accounts.contact', verbose_name='Contact')),
            ],
            options={
                'verbose_name': 'Driver',
                'verbose_name_plural': 'Drivers',
                'ordering': ['slug'],
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix_number', models.IntegerField(default=11, help_text='Prefix number of the license plate.', verbose_name='Prefix Number')),
                ('alphabet', models.CharField(default='пи', help_text='Alphabet part of the license plate.', max_length=2, verbose_name='Alphabet')),
                ('postfix_number', models.IntegerField(default=111, help_text='Postfix number of the license plate.', verbose_name='Postfix Number')),
                ('has_refrigerator', models.BooleanField(default=False, help_text='Indicates if the car has a refrigerator.', verbose_name='Has Refrigerator')),
                ('slug', models.SlugField(editable=False, help_text='URL-friendly identifier for the car.', max_length=100, unique=True, verbose_name='Slug')),
                ('repetitive', models.BooleanField(default=False, help_text='Indicates if the car is used for repetitive tasks.', verbose_name='Repetitive')),
                ('product_category', models.ForeignKey(help_text='Product category associated with the car.', on_delete=django.db.models.deletion.PROTECT, related_name='cars', to='product.productcategory', verbose_name='Product Category')),
                ('city_code', models.ForeignKey(help_text="City associated with the car's license plate.", on_delete=django.db.models.deletion.PROTECT, related_name='cars', to='core.city', verbose_name='City Code')),
                ('driver', models.OneToOneField(help_text='Driver assigned to this car.', on_delete=django.db.models.deletion.CASCADE, related_name='car', to='core.driver', verbose_name='Driver')),
            ],
            options={
                'verbose_name': 'Car',
                'verbose_name_plural': 'Cars',
                'ordering': ['prefix_number', 'alphabet', 'postfix_number'],
            },
        ),
        migrations.CreateModel(
            name='ProductOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(editable=False, help_text='URL-friendly identifier for the product owner.', unique=True, verbose_name='Slug')),
                ('contact', models.ForeignKey(help_text='Contact associated with this product owner.', on_delete=django.db.models.deletion.PROTECT, related_name='product_owners', to='accounts.contact', verbose_name='Contact')),
            ],
            options={
                'verbose_name': 'Product Owner',
                'verbose_name_plural': 'Product Owners',
                'ordering': ['contact__name'],
            },
        ),
        migrations.CreateModel(
            name='Agriculture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the agriculture entity.', max_length=50, verbose_name='Name')),
                ('slug', models.SlugField(editable=False, help_text='URL-friendly identifier for the agriculture entity.', unique=True, verbose_name='Slug')),
                ('city', models.ForeignKey(help_text='City associated with this agriculture entity.', on_delete=django.db.models.deletion.CASCADE, related_name='agricultures', to='core.city', verbose_name='City')),
            ],
            options={
                'verbose_name': 'Agriculture',
                'verbose_name_plural': 'Agricultures',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['slug'], name='core_agricu_slug_d4297f_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='driver',
            index=models.Index(fields=['slug'], name='core_driver_slug_3fffe2_idx'),
        ),
        migrations.AddIndex(
            model_name='car',
            index=models.Index(fields=['slug'], name='core_car_slug_8ec7c1_idx'),
        ),
        migrations.AddIndex(
            model_name='car',
            index=models.Index(fields=['prefix_number', 'alphabet', 'postfix_number'], name='core_car_prefix__6d3faa_idx'),
        ),
        migrations.AddIndex(
            model_name='productowner',
            index=models.Index(fields=['slug'], name='core_produc_slug_91a8b7_idx'),
        ),
    ]
